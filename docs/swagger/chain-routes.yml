paths:
  /chain/config:
    get:
      tags:
        - 'chain'
      summary: 'Returns configuration options for a chain'
      produces:
        - 'application/json'
      responses: '200'

  /chain/status:
    get:
      tags:
        - 'chain'
      summary: 'Returns status of the chain'
      produces:
        - 'application/json'
      responses: '200'

  /chain/tokens:
    get:
      tags:
        - 'chain'
      summary: 'Returns a list of tokens available on a chain'
      produces:
        - 'application/json'
      parameters:
        - in: 'query'
          name: 'chain'
          required: true
          type: 'string'
          example: 'ethereum'
        - in: 'query'
          name: 'network'
          required: true
          type: 'string'
          example: 'goerli'
        - in: 'query'
          name: 'tokenSymbols'
          required: false
      responses:
        '200':
          schema:
            $ref: '#/definitions/TokensResponse'
            
  /chain/allowances:
    post:
      tags:
        - 'chain'
      summary: 'Get ERC20 allowances for an address on a chain'
      operationId: 'allowances'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          schema:
            $ref: '#/definitions/AllowancesRequest'
      responses:
        '200':
          schema:
            $ref: '#/definitions/AllowancesResponse'


  /chain/balances:
    post:
      tags:
        - 'chain'
      summary: 'Get balances for an address on a chain'
      operationId: 'balances'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          schema:
            $ref: '#/definitions/BalancesRequest'
      responses:
        '200':
          schema:
            $ref: '#/definitions/BalancesResponse'

  /chain/approve:
    post:
      tags:
        - 'chain'
      summary: 'Create an ERC20 approval for a spender on an private key'
      operationId: 'approve'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          schema:
            $ref: '#/definitions/ApproveRequest'
      responses:
        '200':
          schema:
            $ref: '#/definitions/ApproveResponse'

  /chain/cancel:
    post:
      tags:
        - 'chain'
      summary: 'Cancel transaction'
      operationId: 'cancel'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          schema:
            $ref: '#/definitions/CancelRequest'
      responses:
        '200':
          schema:
            $ref: '#/definitions/CancelResponse'

  /chain/transfer:
    post:
      tags:
        - 'chain'
      summary: 'Transfer balance'
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          schema:
            $ref: '#/definitions/TransferRequest'
      produces:
        - 'application/json'          
      responses:
        '200'

  /chain/poll:
    post:
      tags:
        - 'chain'
      summary: 'Poll the status of a transaction on a chain'
      operationId: 'poll'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          schema:
            $ref: '#/definitions/PollRequest'
      responses:
        '200':
          schema:
            $ref: '#/definitions/PollResponse'

  /chain/nonce:
    post:
      tags:
        - 'chain'
      summary: 'Get the current nonce for the provided private key'
      operationId: 'nonce'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          schema:
            $ref: '#/definitions/NonceRequest'
      responses:
        '200':
          schema:
            $ref: '#/definitions/NonceResponse'

  /chain/nextNonce:
    post:
      tags:
        - 'chain'
      summary: 'Get the next nonce for the provided private key'
      operationId: 'nonce'
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: 'body'
          name: 'body'
          required: true
          schema:
            $ref: '#/definitions/NonceRequest'
      responses:
        '200':
          schema:
            $ref: '#/definitions/NonceResponse'
